public class RemoveDuplicates {
    public static void main(String[] args) {
        int[] sortedArray = {1, 1, 2, 2, 3, 4, 4, 5, 5};
        int length = removeDuplicates(sortedArray);
        
        System.out.println("Length of the array after removing duplicates: " + length);
        System.out.print("Array without duplicates: ");
        for (int i = 0; i < length; i++) {
            System.out.print(sortedArray[i] + " ");
        }
    }

    public static int removeDuplicates(int[] nums) {
        if (nums.length == 0) {
            return 0;
        }
        
        int uniqueIndex = 0; // Index to store the position of the next unique element
        
        for (int i = 1; i < nums.length; i++) {
            // If the current element is different from the previous element
            if (nums[i] != nums[uniqueIndex]) {
                uniqueIndex++; // Move the unique index to the next position
                nums[uniqueIndex] = nums[i]; // Update the array with the new unique element
            }
        }
        
        // Length of the array without duplicates is one more than the index of the last unique element
        return uniqueIndex + 1;
    }
}
//We iterate through the array starting from the second element (i = 1).
// If the current element is different from the previous element, 
//we increment the uniqueIndex and update the array with the new unique element at the uniqueIndex.
// At the end of the loop, the uniqueIndex represents the index of the last unique element in the array.
// The length of the array without duplicates is one more than the uniqueIndex,
// so we return uniqueIndex + 1.
// We also handle the case where the input array is empty.